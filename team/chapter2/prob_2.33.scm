(define (map p sequence)
  (accumulate (lambda (x y) (cons (p x) y)) nil sequence))
(define (append seq1 seq2)
  (accumulate cons seq2 seq1))
(define (length sequence)
  (accumulate (lambda (x y) (+ 1 y)) 0 sequence))

(define (double x)
  (* x 2))
(define nil '())
(map double (list 1 2 3 4 5))
(append (list 1 2) (list 3 4))
(length (list 1 2 3 4))
